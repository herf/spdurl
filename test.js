var spdurl = require("./spdurl");

// make an SPD and encode/decode roundtrip:
var spd = spdurl.SPD();

spd.base = 380;
spd.delta = 10;
spd.date = Math.floor(new Date().valueOf() / 1000);
spd.data = [1.039693,1.039379,1.039198,1.564554,1.696937,1.583408,1.778512,1.970525,1.930359,1.800388,1.725509,1.659314,1.651000,1.587592,1.506774,1.541956,1.536947,1.536743,1.488346,1.409579,1.326508,1.219819,1.163692,1.117009,1.068008,1.037550,1.015638,0.944459,0.889883,0.855271,0.801936,0.759832,0.904105,1.111251,1.211360,1.453921];

var enc = spdurl.encodeSPD(spd);
console.log("Encoded URL = " + enc);
console.log(enc.length + " bytes");

var dec = spdurl.decodeSPD(enc);
//console.log(dec);

var relerr = spd.err(dec);

console.log("relerr", relerr);

// examples using some CIE standard illuminants
const illumA 	= [9.8, 10.9, 12.09, 13.35, 14.71, 16.15, 17.68, 19.29, 20.99, 22.79, 24.67, 26.64, 28.7, 30.85, 33.09, 35.41, 37.81, 40.3, 42.87, 45.52, 48.24, 51.04, 53.91, 56.85, 59.86, 62.93, 66.06, 69.25, 72.5, 75.79, 79.13, 82.52, 85.95, 89.41, 92.91, 96.44, 100.0, 103.58, 107.18, 110.8, 114.44, 118.08, 121.73, 125.39, 129.04, 132.7, 136.35, 139.99, 143.62, 147.24, 150.84, 154.42, 157.98, 161.52, 165.03, 168.51, 171.96, 175.38, 178.77, 182.12, 185.43, 188.7, 191.93, 195.12, 198.26, 201.36, 204.41, 207.41, 210.36, 213.27, 216.12, 218.92, 221.67, 224.36, 227.0, 229.59, 232.12, 234.59, 237.01, 239.37, 241.68];
const D50 	= [24.49, 27.18, 29.87, 39.59, 49.31, 52.91, 56.51, 58.27, 60.03, 58.93, 57.82, 66.32, 74.82, 81.04, 87.25, 88.93, 90.61, 90.99, 91.37, 93.24, 95.11, 93.54, 91.96, 93.84, 95.72, 96.17, 96.61, 96.87, 97.13, 99.61, 102.1, 101.43, 100.75, 101.54, 102.32, 101.16, 100.0, 98.87, 97.74, 98.33, 98.92, 96.21, 93.5, 95.59, 97.69, 98.48, 99.27, 99.16, 99.04, 97.38, 95.72, 97.29, 98.86, 97.26, 95.67, 96.93, 98.19, 100.6, 103.0, 101.07, 99.13, 93.26, 87.38, 89.49, 91.6, 92.25, 92.89, 84.87, 76.85, 81.68, 86.51, 89.55, 92.58, 85.4, 78.23, 67.96, 57.69, 70.31, 82.92, 80.6, 78.27];
const D55 	= [32.58, 35.34, 38.09, 49.52, 60.95, 64.75, 68.55, 70.07, 71.58, 69.75, 67.91, 76.76, 85.61, 91.8, 97.99, 99.23, 100.46, 100.19, 99.91, 101.33, 102.74, 100.41, 98.08, 99.38, 100.68, 100.69, 100.7, 100.34, 99.99, 102.1, 104.21, 103.16, 102.1, 102.53, 102.97, 101.48, 100.0, 98.61, 97.22, 97.48, 97.75, 94.59, 91.43, 92.93, 94.42, 94.78, 95.14, 94.68, 94.22, 92.33, 90.45, 91.39, 92.33, 90.59, 88.85, 89.59, 90.32, 92.13, 93.95, 91.95, 89.96, 84.82, 79.68, 81.26, 82.84, 83.84, 84.84, 77.54, 70.24, 74.77, 79.3, 82.15, 84.99, 78.44, 71.88, 62.34, 52.79, 64.36, 75.93, 73.87, 71.82];
const D65 	= [49.98, 52.31, 54.65, 68.7, 82.75, 87.12, 91.49, 92.46, 93.43, 90.06, 86.68, 95.77, 104.86, 110.94, 117.01, 117.41, 117.81, 116.34, 114.86, 115.39, 115.92, 112.37, 108.81, 109.08, 109.35, 108.58, 107.8, 106.3, 104.79, 106.24, 107.69, 106.05, 104.41, 104.23, 104.05, 102.02, 100.0, 98.17, 96.33, 96.06, 95.79, 92.24, 88.69, 89.35, 90.01, 89.8, 89.6, 88.65, 87.7, 85.49, 83.29, 83.49, 83.7, 81.86, 80.03, 80.12, 80.21, 81.25, 82.28, 80.28, 78.28, 74.0, 69.72, 70.67, 71.61, 72.98, 74.35, 67.98, 61.6, 65.74, 69.89, 72.49, 75.09, 69.34, 63.59, 55.01, 46.42, 56.61, 66.81, 65.09, 63.38];
const D75 	= [66.7, 68.33, 69.96, 85.95, 101.93, 106.91, 111.89, 112.35, 112.8, 107.94, 103.09, 112.14, 121.2, 127.1, 133.01, 132.68, 132.36, 129.84, 127.32, 127.06, 126.8, 122.29, 117.78, 117.19, 116.59, 115.15, 113.7, 111.18, 108.66, 109.55, 110.44, 108.37, 106.29, 105.6, 104.9, 102.45, 100.0, 97.81, 95.62, 94.91, 94.21, 90.6, 87.0, 87.11, 87.23, 86.68, 86.14, 84.86, 83.58, 81.16, 78.75, 78.59, 78.43, 76.61, 74.8, 74.56, 74.32, 74.87, 75.42, 73.5, 71.58, 67.71, 63.85, 64.46, 65.08, 66.57, 68.07, 62.26, 56.44, 60.34, 64.24, 66.7, 69.15, 63.89, 58.63, 50.62, 42.62, 51.98, 61.35, 59.84, 58.32];
const equal   = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
const F2 = [1.18, 1.48, 1.84, 2.15, 3.44, 15.69, 3.85, 3.74, 4.19, 4.62, 5.06, 34.98, 11.81, 6.27, 6.63, 6.93, 7.19, 7.4, 7.54, 7.62, 7.65, 7.62, 7.62, 7.45, 7.28, 7.15, 7.05, 7.04, 7.16, 7.47, 8.04, 8.88, 10.01, 24.88, 16.64, 14.59, 16.16, 17.56, 18.62, 21.47, 22.79, 19.29, 18.66, 17.73, 16.54, 15.21, 13.8, 12.36, 10.95, 9.65, 8.4, 7.32, 6.31, 5.43, 4.68, 4.02, 3.45, 2.96, 2.55, 2.19, 1.89, 1.64, 1.53, 1.27, 1.1, 0.99, 0.88, 0.76, 0.68, 0.61, 0.56, 0.54, 0.51, 0.47, 0.47, 0.43, 0.46, 0.47, 0.4, 0.33, 0.27];
const F4 = [0.57, 0.7, 0.87, 0.98, 2.01, 13.75, 1.95, 1.59, 1.76, 1.93, 2.1, 30.28, 8.03, 2.55, 2.7, 2.82, 2.91, 2.99, 3.04, 3.08, 3.09, 3.09, 3.14, 3.06, 3, 2.98, 3.01, 3.14, 3.41, 3.9, 4.69, 5.81, 7.32, 22.59, 15.11, 13.88, 16.33, 18.68, 20.64, 24.28, 26.26, 23.28, 22.94, 22.14, 20.91, 19.43, 17.74, 16, 14.42, 12.56, 10.93, 9.52, 8.18, 7.01, 6, 5.11, 4.36, 3.69, 3.13, 2.64, 2.24, 1.91, 1.7, 1.39, 1.18, 1.03, 0.88, 0.74, 0.64, 0.54, 0.49, 0.46, 0.42, 0.37, 0.37, 0.33, 0.35, 0.36, 0.31, 0.26, 0.19];
const F7 = [2.56, 3.18, 3.84, 4.53, 6.15, 19.37, 7.37, 7.05, 7.71, 8.41, 9.15, 44.14, 17.52, 11.35, 12, 12.58, 13.08, 13.45, 13.71, 13.88, 13.95, 13.93, 13.82, 13.64, 13.43, 13.25, 13.08, 12.93, 12.78, 12.6, 12.44, 12.33, 12.26, 29.52, 17.05, 12.44, 12.58, 12.72, 12.83, 15.46, 16.75, 12.83, 12.67, 12.45, 12.19, 11.89, 11.6, 11.35, 11.12, 10.95, 10.76, 10.42, 10.11, 10.04, 10.02, 10.11, 9.87, 8.65, 7.27, 6.44, 5.83, 5.41, 5.04, 4.57, 4.12, 3.77, 3.46, 3.08, 2.73, 2.47, 2.25, 2.06, 1.9, 1.75, 1.62, 1.54, 1.45, 1.32, 1.17, 0.99, 0.81];
const F11 = [0.91, 0.63, 0.46, 0.37, 1.29, 12.68, 1.59, 1.79, 2.46, 3.33, 4.49, 33.94, 12.13, 6.95, 7.19, 7.12, 6.72, 6.13, 5.46, 4.79, 5.66, 14.29, 14.96, 8.97, 4.72, 2.33, 1.47, 1.1, 0.89, 0.83, 1.18, 4.9, 39.59, 72.84, 32.61, 7.52, 2.83, 1.96, 1.67, 4.43, 11.28, 14.76, 12.73, 9.74, 7.33, 9.72, 55.27, 42.58, 13.18, 13.16, 12.26, 5.11, 2.07, 2.34, 3.58, 3.01, 2.48, 2.14, 1.54, 1.33, 1.46, 1.94, 2, 1.2, 1.35, 4.1, 5.58, 2.51, 0.57, 0.27, 0.23, 0.21, 0.24, 0.24, 0.2, 0.24, 0.32, 0.26, 0.16, 0.12, 0.09];

var std = {
	"A": illumA, 
	"D50": D50, 
	"D55": D55, 
	"D65": D65, 
	"D75": D75, 
	"Equal": equal, 
	"F2": F2, 
	"F7": F7, 
	"F11": F11};

for (var s in std) {
	var spd = spdurl.SPD();
	spd.base = 380;
	spd.delta = 5;
	spd.data = std[s];

	console.log(s, spdurl.encodeSPD(spd));
}